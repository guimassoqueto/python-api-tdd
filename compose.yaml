version: "3.9"

services:
  app:
    container_name: app
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - DEV=true
    depends_on:
      db:
        condition: service_healthy
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: ${POSTGRES_HOST}
    ports:
      - "${APP_PORT}:${APP_PORT}"
    volumes:
      - ./app:/app
    command: >
      sh -c "
             python manage.py wait_for_db &&
             python manage.py migrate &&
             python manage.py makemigrations &&
             python manage.py runserver 0.0.0.0:${APP_PORT}
            "
    networks:
      - local

  db:
    container_name: db-app
    image: postgres:13-alpine
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: ${POSTGRES_HOST}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    volumes:
      - db-python-api-tdd:/var/lib/postgres
    networks:
      - local

volumes:
  db-python-api-tdd:

networks:
  local:
    name: local
    driver: bridge